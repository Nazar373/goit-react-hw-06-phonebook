{"version":3,"sources":["redux/selectors.js","redux/contactSlice.js","components/contactForm/ContactForm.styled.js","components/contactForm/ContactForm.jsx","components/contactList/ContactList.styled.js","components/contactList/ContactList.jsx","redux/filterSlice.js","components/filter/Filter.styled.js","components/filter/Filter.jsx","components/App/App.styled.js","components/App/App.jsx","redux/store.js","index.js"],"names":["getContacts","state","contacts","getFilter","filter","contactsSlice","createSlice","name","initialState","id","number","reducers","addContact","reducer","action","push","payload","prepare","nanoid","deleteContact","contact","_contactsSlice$action","actions","Form","styled","form","_templateObject","Object","taggedTemplateLiteral","Label","label","_templateObject2","Input","input","_templateObject3","ContactForm","dispatch","useDispatch","useSelector","react_default","a","createElement","onSubmit","e","preventDefault","target","elements","value","find","alert","concat","reset","type","pattern","title","required","List","ul","ContactList_styled_templateObject","Item","li","ContactList_styled_templateObject2","ContactList","console","log","contactList","toLowerCase","includes","map","key","onClick","filterSlice","setFilterState","Filter_styled_templateObject","Filter_styled_templateObject2","Filter","Filter_styled_Label","Filter_styled_Input","onChange","currentTarget","Container","div","App_styled_templateObject","Title","h1","App_styled_templateObject2","SecondTitle","h2","App_styled_templateObject3","App","useEffect","localStorage","setItem","JSON","stringify","filter_Filter","contactList_ContactList","store","configureStore","ReactDOM","createRoot","document","getElementById","render","StrictMode","es"],"mappings":"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","file":"static/js/main.5c49237a.chunk.js","sourcesContent":["export const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;\n\n","import { createSlice } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\n\nconst initialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport const contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    addContact: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n      prepare(name, number) {\n        return {\n          payload: {\n            id: nanoid(),\n            name,\n            number,\n          }\n        }\n      },\n    deleteContact(state, action) {\n      return state.filter(contact => contact.id !== action.payload)\n      }\n    },\n  },\n});\n\nexport const { addContact, deleteContact } = contactsSlice.actions;\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  `\n\nexport const Label = styled.label`\n  display:flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  width: 200px;`\n\nexport const Input = styled.input`\n  height: 25px;`\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/selectors';\nimport { addContact } from '../../redux/contactSlice';\nimport { Form, Label, Input } from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert('a contact with this name is already registered');\n      return;\n    } else if (contacts.find(contact => contact.number === number)) {\n      alert(`${number} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(name, number));\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 300px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 20px;`\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from '../../redux/selectors';\nimport { deleteContact } from '../../redux/contactSlice';\nimport { Item, List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  console.log(contacts);\n  const filter = useSelector(getFilter);\n\n  console.log('filter', filter);\n  const contactList = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n  console.log('islist', contactList);\n  return (\n    <List>\n      {contactList.map(contact => (\n        <Item key={contact.id}>\n          <p>\n            {contact.name} : {contact.number}\n          </p>\n          <button onClick={() => dispatch(deleteContact(contact.id))}>\n            Delete\n          </button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterInitialState = '';\n\nexport const filterSlice = createSlice({\n  name: 'filter',\n  initialState: filterInitialState,\n  reducers: {\n    setFilterState(state, action) {\n     return state = action.payload\n    }\n  }\n})\n\nexport const { setFilterState } = filterSlice.actions","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display:flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  width: 200px;`\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  height: 25px;`","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilterState } from '../../redux/filterSlice';\nimport { Input, Label } from './Filter.styled';\n\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const onChangeFilter = e => {\n    return dispatch(setFilterState(e.currentTarget.value))\n  }\n return <Label>\n  Find contacts by name\n    <Input\n      type=\"text\"\n      // value={value}\n      onChange={onChangeFilter}\n    ></Input>\n  </Label>;\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin: 80px auto;\n`;\n\nexport const Title = styled.h1`\n  font-size: 32px;\n  font-weight: 900;\n  color: #2c2d2e;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const SecondTitle = styled.h2`\n  font-size: 28px;\n  font-weight: 900;\n  color: #2c2d2e;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n","import React, { useEffect } from 'react';\nimport ContactForm from '../contactForm/ContactForm';\nimport ContactList from '../contactList/ContactList';\nimport Filter from '../filter/Filter';\nimport { Container, Title, SecondTitle } from './App.styled';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/selectors';\n\nexport function App() {\n  const contacts = useSelector(getContacts)\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <SecondTitle>Contacts</SecondTitle>\n      <Filter\n      />\n      <ContactList\n      />\n    </Container>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { contactsSlice } from \"./contactSlice\";\nimport { filterSlice } from \"./filterSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsSlice.reducer,\n    filter: filterSlice.reducer,\n  }\n});\n\n\n\n// import { persistStore, persistReducer } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// import { rootReducer } from \"./reducer\";\n\n\n// const persistConfig = {\n//   key: 'root',\n//   storage,\n// }\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer)\n\n// export default () => {\n//   let store = createStore(persistedReducer)\n//   let persistor = persistStore(store)\n//   return { store, persistor }\n// }","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from './components/App/App';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}